{
  "name": "gpay-node",
  "version": "0.2.0",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git@github.com:gyro-n/payments-node.git"
  },
  "main": "lib/index.js",
  "typings": "lib/index.d.ts",
  "files": [
    "lib/"
  ],
  "devDependencies": {
    "awesome-typescript-loader": "^2.2.4",
    "babel-cli": "^6.18.0",
    "babel-core": "^6.18.0",
    "babel-loader": "^6.2.7",
    "babel-plugin-transform-builtin-extend": "^1.1.0",
    "babel-plugin-transform-runtime": "^6.15.0",
    "babel-polyfill": "^6.16.0",
    "babel-preset-es2015": "^6.18.0",
    "chai": "~3.5.0",
    "chai-as-promised": "~6.0.0",
    "html-webpack-plugin": "^2.24.1",
    "html-webpack-template": "^5.4.1",
    "jsdom": "~9.8.3",
    "jsdom-global": "~2.1.0",
    "mocha": "~3.1.2",
    "nock": "~9.0.2",
    "path": "~0.12.7",
    "sinon": "~1.17.6",
    "sinon-chai": "~2.8.0",
    "source-map-loader": "^0.1.5",
    "ts-babel-node": "^1.1.1",
    "ts-node": "~1.6.1",
    "tslint": "~3.15.1",
    "typescript": "^2.0.6",
    "typings": "~1.5.0",
    "url-search-params": "^0.6.1",
    "webpack": "^2.1.0-beta.25",
    "webpack-combine-loaders": "^2.0.0",
    "webpack-dashboard": "^0.2.0",
    "webpack-dev-server": "^2.1.0-beta.0"
  },
  "dependencies": {
    "camelcase": "^3.0.0",
    "decamelize": "^1.2.0",
    "es6-error": "^4.0.0",
    "isomorphic-fetch": "^2.2.1",
    "node-fetch": "^1.6.3",
    "process": "^0.11.9"
  },
  "scripts": {
    "linter": "./node_modules/tslint/bin/tslint src/**/*.ts",
    "clean": "npm prune && rm -rf node_modules typings lib",
    "test": "npm run linter && ./node_modules/mocha/bin/mocha --require jsdom-global/register --require babel-polyfill --compilers ts:ts-babel-node/register test/**/*.specs.ts",
    "build": "rm -rf lib && tsc && babel lib -d lib -s --input-source-map inline",
    "start": "webpack-dashboard -p 3004 -- webpack-dev-server --config webpack.config.js",
    "preversion": "npm test",
    "postversion": "git add package.json && git commit -m \"Bump version to `node -e \"console.log(require('./package.json').version);\"`\""
  }
}
