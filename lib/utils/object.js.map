{"version":3,"sources":["object.js"],"names":["transformKeys","obj","transformer","Object","keys","reduce","r","k","c","o","Boolean","v","Array","isArray","map","i","exports","missingKeys","constructor","objKeys","missing","key","indexOf","undefined","push","partitionKeys","condition","left","right","forEach"],"mappings":"AAAA;;;;;;;;AACA,SAASA,aAAT,CAAuBC,GAAvB,EAA4BC,WAA5B,EAAyC;AACrC,WAAOC,OAAOC,IAAP,CAAYH,OAAO,EAAnB,EAAuBI,MAAvB,CAA8B,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAC3C,YAAMC,IAAI,SAAJA,CAAI,CAACC,CAAD;AAAA,mBAAO,QAAOA,CAAP,uDAAOA,CAAP,OAAa,QAAb,IAAyBC,QAAQD,CAAR,CAAhC;AAAA,SAAV;AACA,YAAIE,IAAIV,IAAIM,CAAJ,CAAR;AACA,YAAIC,EAAEG,CAAF,CAAJ,EAAU;AACN,gBAAIC,MAAMC,OAAN,CAAcF,CAAd,CAAJ,EAAsB;AAClBA,oBAAIA,EAAEG,GAAF,CAAM,UAACC,CAAD;AAAA,2BAAOP,EAAEO,CAAF,IAAOf,cAAce,CAAd,EAAiBb,WAAjB,CAAP,GAAuCa,CAA9C;AAAA,iBAAN,CAAJ;AACH,aAFD,MAGK;AACDJ,oBAAIX,cAAcW,CAAd,EAAiBT,WAAjB,CAAJ;AACH;AACJ;AACDI,UAAEJ,YAAYK,CAAZ,CAAF,IAAoBI,CAApB;AACA,eAAOL,CAAP;AACH,KAbM,EAaJ,EAbI,CAAP;AAcH;AACDU,QAAQhB,aAAR,GAAwBA,aAAxB;AACA,SAASiB,WAAT,CAAqBhB,GAArB,EAAqC;AAAA,QAAXG,IAAW,uEAAJ,EAAI;;AACjC,QAAI,CAACH,GAAL,EAAU;AACN,eAAOG,IAAP;AACH;AACD,QAAIH,IAAIiB,WAAJ,KAAoB,GAAGA,WAA3B,EAAwC;AACpC,eAAO,EAAP;AACH;AACD,QAAMC,UAAUhB,OAAOC,IAAP,CAAYH,OAAO,EAAnB,CAAhB;AACA,QAAMmB,UAAU,EAAhB;AACA,yBAAgBhB,IAAhB,kHAAsB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,YAAbiB,GAAa;;AAClB,YAAIF,QAAQG,OAAR,CAAgBD,GAAhB,MAAyB,CAAC,CAA1B,IAA+BpB,IAAIoB,GAAJ,MAAaE,SAAhD,EAA2D;AACvDH,oBAAQI,IAAR,CAAaH,GAAb;AACH;AACJ;AACD,WAAOD,OAAP;AACH;AACDJ,QAAQC,WAAR,GAAsBA,WAAtB;AACA,SAASQ,aAAT,CAAuBxB,GAAvB,EAA4ByB,SAA5B,EAAuC;AACnC,QAAMC,OAAO,EAAb;AACA,QAAMC,QAAQ,EAAd;AACAzB,WAAOC,IAAP,CAAYH,OAAO,EAAnB,EAAuB4B,OAAvB,CAA+B,UAACtB,CAAD,EAAO;AAClC,YAAImB,UAAUnB,CAAV,CAAJ,EAAkB;AACdoB,iBAAKpB,CAAL,IAAUN,IAAIM,CAAJ,CAAV;AACH,SAFD,MAGK;AACDqB,kBAAMrB,CAAN,IAAWN,IAAIM,CAAJ,CAAX;AACH;AACJ,KAPD;AAQA,WAAO,CAACoB,IAAD,EAAOC,KAAP,CAAP;AACH;AACDZ,QAAQS,aAAR,GAAwBA,aAAxB","file":"object.js","sourcesContent":["\"use strict\";\nfunction transformKeys(obj, transformer) {\n    return Object.keys(obj || {}).reduce((r, k) => {\n        const c = (o) => typeof o === \"object\" && Boolean(o);\n        let v = obj[k];\n        if (c(v)) {\n            if (Array.isArray(v)) {\n                v = v.map((i) => c(i) ? transformKeys(i, transformer) : i);\n            }\n            else {\n                v = transformKeys(v, transformer);\n            }\n        }\n        r[transformer(k)] = v;\n        return r;\n    }, {});\n}\nexports.transformKeys = transformKeys;\nfunction missingKeys(obj, keys = []) {\n    if (!obj) {\n        return keys;\n    }\n    if (obj.constructor !== {}.constructor) {\n        return [];\n    }\n    const objKeys = Object.keys(obj || {});\n    const missing = [];\n    for (let key of keys) {\n        if (objKeys.indexOf(key) === -1 || obj[key] === undefined) {\n            missing.push(key);\n        }\n    }\n    return missing;\n}\nexports.missingKeys = missingKeys;\nfunction partitionKeys(obj, condition) {\n    const left = {};\n    const right = {};\n    Object.keys(obj || {}).forEach((k) => {\n        if (condition(k)) {\n            left[k] = obj[k];\n        }\n        else {\n            right[k] = obj[k];\n        }\n    });\n    return [left, right];\n}\nexports.partitionKeys = partitionKeys;\n"]}