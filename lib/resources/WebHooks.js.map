{"version":3,"sources":["WebHooks.js"],"names":["CRUDResource_1","require","webhook_1","WebHooks","list","storeId","data","callback","merchantId","token","params","_listRoute","create","_createRoute","validationSchema","webHookCreateSchema","get","id","_getRoute","update","_updateRoute","webHookUpdateSchema","delete","_deleteRoute","CRUDResource","routeBase","exports"],"mappings":"AAAA;;;;;;;;AACA,IAAMA,iBAAiBC,QAAQ,gBAAR,CAAvB;AACA,IAAMC,YAAYD,QAAQ,+BAAR,CAAlB;;IACME,Q;;;;;;;;;uBACFC,I,iBAAKC,O,EAASC,I,EAAMC,Q,EAAUC,U,EAAYC,K,EAAO;AAC7C,YAAMC,SAAS,EAAEL,gBAAF,EAAWG,sBAAX,EAAf;AACA,eAAO,KAAKG,UAAL,CAAgBD,MAAhB,EAAwBJ,IAAxB,EAA8BC,QAA9B,EAAwC,EAAEE,YAAF,EAAxC,CAAP;AACH,K;;uBACDG,M,mBAAOP,O,EAASC,I,EAAMC,Q,EAAUC,U,EAAYC,K,EAAO;AAC/C,YAAMC,SAAS,EAAEL,gBAAF,EAAWG,sBAAX,EAAf;AACA,eAAO,KAAKK,YAAL,CAAkBH,MAAlB,EAA0BJ,IAA1B,EAAgCC,QAAhC,EAA0C,EAAEE,YAAF,EAASK,kBAAkBZ,UAAUa,mBAArC,EAA1C,CAAP;AACH,K;;uBACDC,G,gBAAIX,O,EAASY,E,EAAIV,Q,EAAUC,U,EAAYC,K,EAAO;AAC1C,YAAMC,SAAS,EAAEO,MAAF,EAAMZ,gBAAN,EAAeG,sBAAf,EAAf;AACA,eAAO,KAAKU,SAAL,CAAeR,MAAf,EAAuB,IAAvB,EAA6BH,QAA7B,EAAuC,EAAEE,YAAF,EAAvC,CAAP;AACH,K;;uBACDU,M,mBAAOd,O,EAASY,E,EAAIX,I,EAAMC,Q,EAAUC,U,EAAYC,K,EAAO;AACnD,YAAMC,SAAS,EAAEO,MAAF,EAAMZ,gBAAN,EAAeG,sBAAf,EAAf;AACA,eAAO,KAAKY,YAAL,CAAkBV,MAAlB,EAA0BJ,IAA1B,EAAgCC,QAAhC,EAA0C,EAAEE,YAAF,EAASK,kBAAkBZ,UAAUmB,mBAArC,EAA1C,CAAP;AACH,K;;uBACDC,M,oBAAOjB,O,EAASY,E,EAAIV,Q,EAAUC,U,EAAYC,K,EAAO;AAC7C,YAAMC,SAAS,EAAEO,MAAF,EAAMZ,gBAAN,EAAeG,sBAAf,EAAf;AACA,eAAO,KAAKe,YAAL,CAAkBb,MAAlB,EAA0B,IAA1B,EAAgCH,QAAhC,EAA0C,EAAEE,YAAF,EAA1C,CAAP;AACH,K;;;EApBkBT,eAAewB,Y;;AAsBtCrB,SAASsB,SAAT,GAAqB,mDAArB;AACAC,QAAQvB,QAAR,GAAmBA,QAAnB","file":"WebHooks.js","sourcesContent":["\"use strict\";\nconst CRUDResource_1 = require(\"./CRUDResource\");\nconst webhook_1 = require(\"../validation/schemas/webhook\");\nclass WebHooks extends CRUDResource_1.CRUDResource {\n    list(storeId, data, callback, merchantId, token) {\n        const params = { storeId, merchantId };\n        return this._listRoute(params, data, callback, { token });\n    }\n    create(storeId, data, callback, merchantId, token) {\n        const params = { storeId, merchantId };\n        return this._createRoute(params, data, callback, { token, validationSchema: webhook_1.webHookCreateSchema });\n    }\n    get(storeId, id, callback, merchantId, token) {\n        const params = { id, storeId, merchantId };\n        return this._getRoute(params, null, callback, { token });\n    }\n    update(storeId, id, data, callback, merchantId, token) {\n        const params = { id, storeId, merchantId };\n        return this._updateRoute(params, data, callback, { token, validationSchema: webhook_1.webHookUpdateSchema });\n    }\n    delete(storeId, id, callback, merchantId, token) {\n        const params = { id, storeId, merchantId };\n        return this._deleteRoute(params, null, callback, { token });\n    }\n}\nWebHooks.routeBase = \"/(merchants/:merchantId/)stores/:storeId/webhooks\";\nexports.WebHooks = WebHooks;\n"]}