{"version":3,"sources":["Resource.js"],"names":["PathParameterError_1","require","RequestParameterError_1","parser_1","object_1","Resource","api","compilePath","path","pathParams","replace","o","part","s","p","indexOf","defineRoute","method","required","route","data","callback","params","_params","reduce","param","i","url","missingPathParams","match","map","m","missingParams","missingKeys","err","length","fromError","PathParameterError","Promise","reject","RequestParameterError","send","exports"],"mappings":"AAAA;;;;;;;;AACA,IAAMA,uBAAuBC,QAAQ,8BAAR,CAA7B;AACA,IAAMC,0BAA0BD,QAAQ,iCAAR,CAAhC;AACA,IAAME,WAAWF,QAAQ,kBAAR,CAAjB;AACA,IAAMG,WAAWH,QAAQ,iBAAR,CAAjB;;IACMI,Q;AACF,sBAAYC,GAAZ,EAAiB;AAAA;;AACb,aAAKA,GAAL,GAAWA,GAAX;AACH;;aACMC,W,wBAAYC,I,EAAMC,U,EAAY;AACjC,eAAOD,KACFE,OADE,CACM,kBADN,EAC0B,UAACC,CAAD,EAAO;AACpC,gBAAMC,OAAOD,EAAED,OAAF,CAAU,UAAV,EAAsB,UAACG,CAAD,EAAIC,CAAJ,EAAU;AACzC,uBAAOL,WAAWK,CAAX,KAAiBD,CAAxB;AACH,aAFY,CAAb;AAGA,mBAAOD,KAAKG,OAAL,CAAa,GAAb,MAAsB,CAAC,CAAvB,GAA2BH,KAAKF,OAAL,CAAa,QAAb,EAAuB,EAAvB,CAA3B,GAAwD,EAA/D;AACH,SANM,EAOFA,OAPE,CAOM,UAPN,EAOkB,UAACG,CAAD,EAAIC,CAAJ;AAAA,mBAAUL,WAAWK,CAAX,KAAiBD,CAA3B;AAAA,SAPlB,CAAP;AAQH,K;;uBACDG,W,wBAAYC,M,EAAQT,I,EAAqB;AAAA,YAAfU,QAAe,yDAAJ,EAAI;;AACrC,YAAMZ,MAAM,KAAKA,GAAjB;AACA,eAAO,SAASa,KAAT,CAAeC,IAAf,EAAqBC,QAArB,EAA2D;AAAA,gBAA5BZ,UAA4B,yDAAf,EAAe;;AAAA,8CAARa,MAAQ;AAARA,sBAAQ;AAAA;;AAC9D,gBAAMC,UAAUD,OAAOE,MAAP,CAAc,UAACV,CAAD,EAAIW,KAAJ,EAAWC,CAAX,EAAiB;AAC3C,oBAAIjB,cAAcA,WAAWiB,CAAX,CAAlB,EAAiC;AAC7BZ,sBAAEL,WAAWiB,CAAX,CAAF,IAAmBD,KAAnB;AACH;AACD,uBAAOX,CAAP;AACH,aALe,EAKb,EALa,CAAhB;AAMA,gBAAMa,MAAMtB,SAASE,WAAT,CAAqBC,IAArB,EAA2Be,OAA3B,CAAZ;AACA,gBAAMK,oBAAoB,CAACD,IAAIE,KAAJ,CAAU,aAAV,KAA4B,EAA7B,EACrBC,GADqB,CACjB,UAACC,CAAD;AAAA,uBAAOA,EAAErB,OAAF,CAAU,GAAV,EAAe,EAAf,CAAP;AAAA,aADiB,CAA1B;AAEA,gBAAMsB,gBAAgB5B,SAAS6B,WAAT,CAAqBb,IAArB,EAA2BF,QAA3B,CAAtB;AACA,gBAAIgB,YAAJ;AACA,gBAAIN,kBAAkBO,MAAlB,GAA2B,CAA/B,EAAkC;AAC9BD,sBAAM/B,SAASiC,SAAT,CAAmB,IAAIpC,qBAAqBqC,kBAAzB,CAA4CT,kBAAkB,CAAlB,CAA5C,CAAnB,CAAN;AACA,oBAAI,OAAOP,QAAP,KAAoB,UAAxB,EAAoC;AAChCA,6BAASa,GAAT;AACH;AACD,uBAAOI,QAAQC,MAAR,CAAeL,GAAf,CAAP;AACH;AACD,gBAAIF,cAAcG,MAAd,GAAuB,CAA3B,EAA8B;AAC1BD,sBAAM/B,SAASiC,SAAT,CAAmB,IAAIlC,wBAAwBsC,qBAA5B,CAAkDR,cAAc,CAAd,CAAlD,CAAnB,CAAN;AACA,oBAAI,OAAOX,QAAP,KAAoB,UAAxB,EAAoC;AAChCA,6BAASa,GAAT;AACH;AACD,uBAAOI,QAAQC,MAAR,CAAeL,GAAf,CAAP;AACH;AACD,mBAAO5B,IAAImC,IAAJ,CAASxB,MAAT,EAAiBU,GAAjB,EAAsBP,IAAtB,EAA4BC,QAA5B,CAAP;AACH,SA3BD;AA4BH,K;;;;;AAELqB,QAAQrC,QAAR,GAAmBA,QAAnB","file":"Resource.js","sourcesContent":["\"use strict\";\nconst PathParameterError_1 = require(\"../errors/PathParameterError\");\nconst RequestParameterError_1 = require(\"../errors/RequestParameterError\");\nconst parser_1 = require(\"../errors/parser\");\nconst object_1 = require(\"../utils/object\");\nclass Resource {\n    constructor(api) {\n        this.api = api;\n    }\n    static compilePath(path, pathParams) {\n        return path\n            .replace(/\\((\\w|:|\\/)+\\)/ig, (o) => {\n            const part = o.replace(/:(\\w+)/ig, (s, p) => {\n                return pathParams[p] || s;\n            });\n            return part.indexOf(\":\") === -1 ? part.replace(/\\(|\\)/g, \"\") : \"\";\n        })\n            .replace(/:(\\w+)/ig, (s, p) => pathParams[p] || s);\n    }\n    defineRoute(method, path, required = []) {\n        const api = this.api;\n        return function route(data, callback, pathParams = [], ...params) {\n            const _params = params.reduce((p, param, i) => {\n                if (pathParams && pathParams[i]) {\n                    p[pathParams[i]] = param;\n                }\n                return p;\n            }, {});\n            const url = Resource.compilePath(path, _params);\n            const missingPathParams = (url.match(/:([a-z]+)/ig) || [])\n                .map((m) => m.replace(\":\", \"\"));\n            const missingParams = object_1.missingKeys(data, required);\n            let err;\n            if (missingPathParams.length > 0) {\n                err = parser_1.fromError(new PathParameterError_1.PathParameterError(missingPathParams[0]));\n                if (typeof callback === \"function\") {\n                    callback(err);\n                }\n                return Promise.reject(err);\n            }\n            if (missingParams.length > 0) {\n                err = parser_1.fromError(new RequestParameterError_1.RequestParameterError(missingParams[0]));\n                if (typeof callback === \"function\") {\n                    callback(err);\n                }\n                return Promise.reject(err);\n            }\n            return api.send(method, url, data, callback);\n        };\n    }\n}\nexports.Resource = Resource;\n"]}