{"version":3,"sources":["Charges.js"],"names":["CRUDResource_1","require","Charges","list","storeId","data","callback","_listRoute","create","defineRoute","requiredParams","get","id","_getRoute","poll","promise","api","longPolling","response","status","CRUDResource","routeBase","exports"],"mappings":"AAAA;;;;;;;;;;;;;;;;AACA,IAAMA,iBAAiBC,QAAQ,gBAAR,CAAvB;;IACMC,O;;;;;;;;sBACFC,I,iBAAKC,O,EAASC,I,EAAMC,Q,EAAU;AAC1B,eAAO,KAAKC,UAAL,GAAkBF,IAAlB,EAAwBC,QAAxB,EAAkC,CAAC,SAAD,CAAlC,EAA+CF,OAA/C,CAAP;AACH,K;;sBACDI,M,mBAAOH,I,EAAMC,Q,EAAU;AACnB,eAAO,KAAKG,WAAL,CAAiB,MAAjB,EAAyB,UAAzB,EAAqCP,QAAQQ,cAA7C,EAA6DL,IAA7D,EAAmEC,QAAnE,CAAP;AACH,K;;sBACDK,G,gBAAIP,O,EAASQ,E,EAAIP,I,EAAMC,Q,EAAU;AAC7B,eAAO,KAAKO,SAAL,GAAiBR,IAAjB,EAAuBC,QAAvB,EAAiC,CAAC,SAAD,EAAY,IAAZ,CAAjC,EAAoDF,OAApD,EAA6DQ,EAA7D,CAAP;AACH,K;;sBACDE,I,iBAAKV,O,EAASQ,E,EAAIP,I,EAAMC,Q,EAAU;AAAA;;AAC9B,YAAMS,UAAU,SAAVA,OAAU;AAAA,mBAAM,OAAKF,SAAL,GAAiBR,IAAjB,EAAuB,IAAvB,EAA6B,CAAC,SAAD,EAAY,IAAZ,CAA7B,EAAgDD,OAAhD,EAAyDQ,EAAzD,CAAN;AAAA,SAAhB;AACA,eAAO,KAAKI,GAAL,CAASC,WAAT,CAAqBF,OAArB,EAA8B,UAACG,QAAD;AAAA,mBAAcA,SAASC,MAAT,KAAoB,SAAlC;AAAA,SAA9B,EAA2Eb,QAA3E,CAAP;AACH,K;;;EAbiBN,eAAeoB,Y;;AAerClB,QAAQQ,cAAR,GAAyB,CAAC,OAAD,EAAU,QAAV,EAAoB,UAApB,CAAzB;AACAR,QAAQmB,SAAR,GAAoB,0BAApB;AACAC,QAAQpB,OAAR,GAAkBA,OAAlB","file":"Charges.js","sourcesContent":["\"use strict\";\nconst CRUDResource_1 = require(\"./CRUDResource\");\nclass Charges extends CRUDResource_1.CRUDResource {\n    list(storeId, data, callback) {\n        return this._listRoute()(data, callback, [\"storeId\"], storeId);\n    }\n    create(data, callback) {\n        return this.defineRoute(\"POST\", \"/charges\", Charges.requiredParams)(data, callback);\n    }\n    get(storeId, id, data, callback) {\n        return this._getRoute()(data, callback, [\"storeId\", \"id\"], storeId, id);\n    }\n    poll(storeId, id, data, callback) {\n        const promise = () => this._getRoute()(data, null, [\"storeId\", \"id\"], storeId, id);\n        return this.api.longPolling(promise, (response) => response.status !== \"pending\", callback);\n    }\n}\nCharges.requiredParams = [\"token\", \"amount\", \"currency\"];\nCharges.routeBase = \"/stores/:storeId/charges\";\nexports.Charges = Charges;\n"]}