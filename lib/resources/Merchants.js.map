{"version":3,"sources":["Merchants.js"],"names":["CRUDResource_1","require","merchant_1","Merchants","arguments","_getVerification","defineRoute","routeVerification","_createVerification","_updateVerification","_createVerify","_changePassword","_forgotPassword","_resetPassword","_getTransactionHistory","list","callback","data","token","_listRoute","create","_createRoute","validationSchema","merchantCreateSchema","get","id","params","_getRoute","update","_updateRoute","merchantUpdateSchema","delete","_deleteRoute","createVerification","merchantId","merchantCreateVerificationSchema","getVerification","updateVerification","merchantUpdateVerificationSchema","verify","merchantCreateVerifySchema","changePassword","merchantChangePasswordSchema","Boolean","forgotPassword","merchantForgotPasswordSchema","resetPassword","merchantResetPasswordSchema","getTransactionHistory","storeId","merchantTransactionHistory","CRUDResource","routeBase","exports"],"mappings":"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","file":"Merchants.js","sourcesContent":["\"use strict\";\nconst CRUDResource_1 = require(\"./CRUDResource\");\nconst merchant_1 = require(\"../validation/schemas/merchant\");\nclass Merchants extends CRUDResource_1.CRUDResource {\n    constructor() {\n        super(...arguments);\n        this._getVerification = this.defineRoute(\"GET\", Merchants.routeVerification);\n        this._createVerification = this.defineRoute(\"POST\", Merchants.routeVerification);\n        this._updateVerification = this.defineRoute(\"PATCH\", Merchants.routeVerification);\n        this._createVerify = this.defineRoute(\"POST\", \"/merchants/:merchantId/verify\");\n        this._changePassword = this.defineRoute(\"POST\", \"/merchants/:merchantId/password/reset\");\n        this._forgotPassword = this.defineRoute(\"POST\", \"/merchants/password/forgot\");\n        this._resetPassword = this.defineRoute(\"POST\", \"/merchants/password/:token\");\n        this._getTransactionHistory = this.defineRoute(\"GET\", \"/merchants/:id/(stores/:storeId/)transaction_history\");\n    }\n    list(callback, data, token) {\n        return this._listRoute(null, data, callback, { token });\n    }\n    create(data, callback, token) {\n        return this._createRoute(null, data, callback, { token, validationSchema: merchant_1.merchantCreateSchema });\n    }\n    get(id, callback, token) {\n        const params = { id };\n        return this._getRoute(params, null, callback, { token });\n    }\n    update(id, data, callback, token) {\n        const params = { id };\n        return this._updateRoute(params, data, callback, { token, validationSchema: merchant_1.merchantUpdateSchema });\n    }\n    delete(id, callback, token) {\n        const params = { id };\n        return this._deleteRoute(params, null, callback, { token });\n    }\n    createVerification(merchantId, data, callback, token) {\n        const params = { merchantId };\n        return this._createVerification(params, data, callback, { token, validationSchema: merchant_1.merchantCreateVerificationSchema });\n    }\n    getVerification(merchantId, callback, token) {\n        const params = { merchantId };\n        return this._getVerification(params, null, callback, { token });\n    }\n    updateVerification(merchantId, data, callback, token) {\n        const params = { merchantId };\n        return this._updateVerification(params, data, callback, { token, validationSchema: merchant_1.merchantUpdateVerificationSchema });\n    }\n    verify(merchantId, data, callback, token) {\n        const params = { merchantId };\n        return this._createVerify(params, data, callback, { token, validationSchema: merchant_1.merchantCreateVerifySchema });\n    }\n    changePassword(data, callback, merchantId, token) {\n        const params = { merchantId };\n        const validationSchema = merchant_1.merchantChangePasswordSchema(Boolean(token));\n        return this._changePassword(params, data, callback, { token, validationSchema });\n    }\n    forgotPassword(data, callback) {\n        return this._forgotPassword(null, data, callback, { validationSchema: merchant_1.merchantForgotPasswordSchema });\n    }\n    resetPassword(token, data, callback) {\n        return this._resetPassword({ token }, data, callback, { validationSchema: merchant_1.merchantResetPasswordSchema });\n    }\n    getTransactionHistory(id, data, storeId, callback, token) {\n        const params = { id, storeId };\n        return this._getTransactionHistory(params, data, callback, { token, validationSchema: merchant_1.merchantTransactionHistory });\n    }\n}\nMerchants.routeBase = \"/merchants\";\nMerchants.routeVerification = \"/merchants/:merchantId/verification\";\nexports.Merchants = Merchants;\n"]}