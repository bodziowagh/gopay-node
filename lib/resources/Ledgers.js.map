{"version":3,"sources":["Ledgers.js"],"names":["CRUDResource_1","require","ledger_1","Ledgers","arguments","_createLedgerForTransfer","defineRoute","_getBalance","_getForTransfer","list","callback","data","merchantId","storeId","token","params","_listRoute","get","id","_getRoute","update","_updateRoute","validationSchema","ledgerUpdateSchema","createLedgerForTransfer","transferId","ledgerCreateForTransferSchema","getForTransfer","getBalance","ledgerBalanceSchema","CRUDResource","routeBase","exports"],"mappings":"AAAA;;;;;;;;AACA,IAAMA,iBAAiBC,QAAQ,gBAAR,CAAvB;AACA,IAAMC,WAAWD,QAAQ,8BAAR,CAAjB;;IACME,O;;;AACF,uBAAc;AAAA;;AAAA,qDACV,kCAASC,SAAT,CADU;;AAEV,cAAKC,wBAAL,GAAgC,MAAKC,WAAL,CAAiB,MAAjB,EAAyB,sDAAzB,CAAhC;AACA,cAAKC,WAAL,GAAmB,MAAKD,WAAL,CAAiB,KAAjB,EAAwB,0CAAxB,CAAnB;AACA,cAAKE,eAAL,GAAuB,MAAKF,WAAL,CAAiB,KAAjB,EAAwB,wDAAxB,CAAvB;AAJU;AAKb;;sBACDG,I,iBAAKC,Q,EAAUC,I,EAAMC,U,EAAYC,O,EAASC,K,EAAO;AAC7C,YAAMC,SAAS,EAAEH,sBAAF,EAAcC,gBAAd,EAAf;AACA,eAAO,KAAKG,UAAL,CAAgBD,MAAhB,EAAwBJ,IAAxB,EAA8BD,QAA9B,EAAwC,EAAEI,YAAF,EAAxC,CAAP;AACH,K;;sBACDG,G,gBAAIC,E,EAAIR,Q,EAAUE,U,EAAYE,K,EAAO;AACjC,YAAMC,SAAS,EAAEG,MAAF,EAAMN,sBAAN,EAAf;AACA,eAAO,KAAKO,SAAL,CAAeJ,MAAf,EAAuB,IAAvB,EAA6BL,QAA7B,EAAuC,EAAEI,YAAF,EAAvC,CAAP;AACH,K;;sBACDM,M,mBAAOF,E,EAAIP,I,EAAMD,Q,EAAUE,U,EAAYE,K,EAAO;AAC1C,YAAMC,SAAS,EAAEG,MAAF,EAAMN,sBAAN,EAAf;AACA,eAAO,KAAKS,YAAL,CAAkBN,MAAlB,EAA0BJ,IAA1B,EAAgCD,QAAhC,EAA0C,EAAEI,YAAF,EAASQ,kBAAkBpB,SAASqB,kBAApC,EAA1C,CAAP;AACH,K;;sBACDC,uB,oCAAwBb,I,EAAMD,Q,EAAUE,U,EAAYa,U,EAAYX,K,EAAO;AACnE,YAAMC,SAAS,EAAEH,sBAAF,EAAca,sBAAd,EAAf;AACA,eAAO,KAAKpB,wBAAL,CAA8BU,MAA9B,EAAsCJ,IAAtC,EAA4CD,QAA5C,EAAsD,EAAEI,YAAF,EAASQ,kBAAkBpB,SAASwB,6BAApC,EAAtD,CAAP;AACH,K;;sBACDC,c,2BAAejB,Q,EAAUC,I,EAAMC,U,EAAYa,U,EAAYX,K,EAAO;AAC1D,YAAMC,SAAS,EAAEH,sBAAF,EAAca,sBAAd,EAAf;AACA,eAAO,KAAKjB,eAAL,CAAqBO,MAArB,EAA6BJ,IAA7B,EAAmCD,QAAnC,EAA6C,EAAEI,YAAF,EAA7C,CAAP;AACH,K;;sBACDc,U,uBAAWlB,Q,EAAUC,I,EAAMO,E,EAAIL,O,EAASC,K,EAAO;AAC3C,eAAO,KAAKP,WAAL,CAAiB,EAAEW,MAAF,EAAML,gBAAN,EAAjB,EAAkCF,IAAlC,EAAwCD,QAAxC,EAAkD,EAAEI,YAAF,EAASQ,kBAAkBpB,SAAS2B,mBAApC,EAAlD,CAAP;AACH,K;;;EA7BiB7B,eAAe8B,Y;;AA+BrC3B,QAAQ4B,SAAR,GAAoB,oDAApB;AACAC,QAAQ7B,OAAR,GAAkBA,OAAlB","file":"Ledgers.js","sourcesContent":["\"use strict\";\nconst CRUDResource_1 = require(\"./CRUDResource\");\nconst ledger_1 = require(\"../validation/schemas/ledger\");\nclass Ledgers extends CRUDResource_1.CRUDResource {\n    constructor() {\n        super(...arguments);\n        this._createLedgerForTransfer = this.defineRoute(\"POST\", \"/merchants/:merchantId/transfers/:transferId/ledgers\");\n        this._getBalance = this.defineRoute(\"GET\", \"/merchants/:id/(stores/:storeId/)balance\");\n        this._getForTransfer = this.defineRoute(\"GET\", \"/(merchants/:merchantId/)transfers/:transferId/ledgers\");\n    }\n    list(callback, data, merchantId, storeId, token) {\n        const params = { merchantId, storeId };\n        return this._listRoute(params, data, callback, { token });\n    }\n    get(id, callback, merchantId, token) {\n        const params = { id, merchantId };\n        return this._getRoute(params, null, callback, { token });\n    }\n    update(id, data, callback, merchantId, token) {\n        const params = { id, merchantId };\n        return this._updateRoute(params, data, callback, { token, validationSchema: ledger_1.ledgerUpdateSchema });\n    }\n    createLedgerForTransfer(data, callback, merchantId, transferId, token) {\n        const params = { merchantId, transferId };\n        return this._createLedgerForTransfer(params, data, callback, { token, validationSchema: ledger_1.ledgerCreateForTransferSchema });\n    }\n    getForTransfer(callback, data, merchantId, transferId, token) {\n        const params = { merchantId, transferId };\n        return this._getForTransfer(params, data, callback, { token });\n    }\n    getBalance(callback, data, id, storeId, token) {\n        return this._getBalance({ id, storeId }, data, callback, { token, validationSchema: ledger_1.ledgerBalanceSchema });\n    }\n}\nLedgers.routeBase = \"/(merchants/:merchantId/)(stores/:storeId/)ledgers\";\nexports.Ledgers = Ledgers;\n"]}