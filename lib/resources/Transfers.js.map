{"version":3,"sources":["Transfers.js"],"names":["CRUDResource_1","require","transfer_1","Transfers","list","callback","data","merchantId","token","params","_listRoute","create","_createRoute","validationSchema","transferCreateSchema","get","id","_getRoute","update","_updateRoute","transferUpdateSchema","CRUDResource","routeBase","exports"],"mappings":"AAAA;;;;;;;;AACA,IAAMA,iBAAiBC,QAAQ,gBAAR,CAAvB;AACA,IAAMC,aAAaD,QAAQ,gCAAR,CAAnB;;IACME,S;;;;;;;;;wBACFC,I,iBAAKC,Q,EAAUC,I,EAAMC,U,EAAYC,K,EAAO;AACpC,YAAMC,SAAS,EAAEF,sBAAF,EAAf;AACA,eAAO,KAAKG,UAAL,CAAgBD,MAAhB,EAAwBH,IAAxB,EAA8BD,QAA9B,EAAwC,EAAEG,YAAF,EAAxC,CAAP;AACH,K;;wBACDG,M,mBAAOL,I,EAAMD,Q,EAAUE,U,EAAYC,K,EAAO;AACtC,YAAMC,SAAS,EAAEF,sBAAF,EAAf;AACA,eAAO,KAAKK,YAAL,CAAkBH,MAAlB,EAA0BH,IAA1B,EAAgCD,QAAhC,EAA0C,EAAEG,YAAF,EAASK,kBAAkBX,WAAWY,oBAAtC,EAA1C,CAAP;AACH,K;;wBACDC,G,gBAAIC,E,EAAIX,Q,EAAUE,U,EAAYC,K,EAAO;AACjC,YAAMC,SAAS,EAAEO,MAAF,EAAMT,sBAAN,EAAf;AACA,eAAO,KAAKU,SAAL,CAAeR,MAAf,EAAuB,IAAvB,EAA6BJ,QAA7B,EAAuC,EAAEG,YAAF,EAAvC,CAAP;AACH,K;;wBACDU,M,mBAAOF,E,EAAIV,I,EAAMD,Q,EAAUE,U,EAAYC,K,EAAO;AAC1C,YAAMC,SAAS,EAAEO,MAAF,EAAMT,sBAAN,EAAf;AACA,eAAO,KAAKY,YAAL,CAAkBV,MAAlB,EAA0BH,IAA1B,EAAgCD,QAAhC,EAA0C,EAAEG,YAAF,EAASK,kBAAkBX,WAAWkB,oBAAtC,EAA1C,CAAP;AACH,K;;;EAhBmBpB,eAAeqB,Y;;AAkBvClB,UAAUmB,SAAV,GAAsB,oCAAtB;AACAC,QAAQpB,SAAR,GAAoBA,SAApB","file":"Transfers.js","sourcesContent":["\"use strict\";\nconst CRUDResource_1 = require(\"./CRUDResource\");\nconst transfer_1 = require(\"../validation/schemas/transfer\");\nclass Transfers extends CRUDResource_1.CRUDResource {\n    list(callback, data, merchantId, token) {\n        const params = { merchantId };\n        return this._listRoute(params, data, callback, { token });\n    }\n    create(data, callback, merchantId, token) {\n        const params = { merchantId };\n        return this._createRoute(params, data, callback, { token, validationSchema: transfer_1.transferCreateSchema });\n    }\n    get(id, callback, merchantId, token) {\n        const params = { id, merchantId };\n        return this._getRoute(params, null, callback, { token });\n    }\n    update(id, data, callback, merchantId, token) {\n        const params = { id, merchantId };\n        return this._updateRoute(params, data, callback, { token, validationSchema: transfer_1.transferUpdateSchema });\n    }\n}\nTransfers.routeBase = \"/(merchants/:merchantId/)transfers\";\nexports.Transfers = Transfers;\n"]}