{"version":3,"sources":["Credentials.js"],"names":["CRUDResource_1","require","credentials_1","Credentials","list","callback","data","merchantId","token","params","_listRoute","create","_createRoute","validationSchema","credentialsCreateSchema","gateway","get","id","_getRoute","update","_updateRoute","credentialsUpdateSchema","delete","_deleteRoute","CRUDResource","routeBase","exports"],"mappings":"AAAA;;;;;;;;AACA,IAAMA,iBAAiBC,QAAQ,gBAAR,CAAvB;AACA,IAAMC,gBAAgBD,QAAQ,mCAAR,CAAtB;;IACME,W;;;;;;;;;0BACFC,I,iBAAKC,Q,EAAUC,I,EAAMC,U,EAAYC,K,EAAO;AACpC,YAAMC,SAAS,EAAEF,sBAAF,EAAf;AACA,eAAO,KAAKG,UAAL,CAAgBD,MAAhB,EAAwBH,IAAxB,EAA8BD,QAA9B,EAAwC,EAAEG,YAAF,EAAxC,CAAP;AACH,K;;0BACDG,M,mBAAOL,I,EAAMD,Q,EAAUE,U,EAAYC,K,EAAO;AACtC,YAAMC,SAAS,EAAEF,sBAAF,EAAf;AACA,eAAO,KAAKK,YAAL,CAAkBH,MAAlB,EAA0BH,IAA1B,EAAgCD,QAAhC,EAA0C,EAAEG,YAAF,EAASK,kBAAkBX,cAAcY,uBAAd,CAAsCR,KAAKS,OAA3C,CAA3B,EAA1C,CAAP;AACH,K;;0BACDC,G,gBAAIC,E,EAAIZ,Q,EAAUE,U,EAAYC,K,EAAO;AACjC,YAAMC,SAAS,EAAEQ,MAAF,EAAMV,sBAAN,EAAf;AACA,eAAO,KAAKW,SAAL,CAAeT,MAAf,EAAuB,IAAvB,EAA6BJ,QAA7B,EAAuC,EAAEG,YAAF,EAAvC,CAAP;AACH,K;;0BACDW,M,mBAAOF,E,EAAIX,I,EAAMD,Q,EAAUE,U,EAAYC,K,EAAO;AAC1C,YAAMC,SAAS,EAAEQ,MAAF,EAAMV,sBAAN,EAAf;AACA,eAAO,KAAKa,YAAL,CAAkBX,MAAlB,EAA0BH,IAA1B,EAAgCD,QAAhC,EAA0C,EAAEG,YAAF,EAASK,kBAAkBX,cAAcmB,uBAAd,CAAsCf,KAAKS,OAA3C,CAA3B,EAA1C,CAAP;AACH,K;;0BACDO,M,oBAAOL,E,EAAIZ,Q,EAAUE,U,EAAYC,K,EAAO;AACpC,YAAMC,SAAS,EAAEQ,MAAF,EAAMV,sBAAN,EAAf;AACA,eAAO,KAAKgB,YAAL,CAAkBd,MAAlB,EAA0B,IAA1B,EAAgCJ,QAAhC,EAA0C,EAAEG,YAAF,EAA1C,CAAP;AACH,K;;;EApBqBR,eAAewB,Y;;AAsBzCrB,YAAYsB,SAAZ,GAAwB,sCAAxB;AACAC,QAAQvB,WAAR,GAAsBA,WAAtB","file":"Credentials.js","sourcesContent":["\"use strict\";\nconst CRUDResource_1 = require(\"./CRUDResource\");\nconst credentials_1 = require(\"../validation/schemas/credentials\");\nclass Credentials extends CRUDResource_1.CRUDResource {\n    list(callback, data, merchantId, token) {\n        const params = { merchantId };\n        return this._listRoute(params, data, callback, { token });\n    }\n    create(data, callback, merchantId, token) {\n        const params = { merchantId };\n        return this._createRoute(params, data, callback, { token, validationSchema: credentials_1.credentialsCreateSchema(data.gateway) });\n    }\n    get(id, callback, merchantId, token) {\n        const params = { id, merchantId };\n        return this._getRoute(params, null, callback, { token });\n    }\n    update(id, data, callback, merchantId, token) {\n        const params = { id, merchantId };\n        return this._updateRoute(params, data, callback, { token, validationSchema: credentials_1.credentialsUpdateSchema(data.gateway) });\n    }\n    delete(id, callback, merchantId, token) {\n        const params = { id, merchantId };\n        return this._deleteRoute(params, null, callback, { token });\n    }\n}\nCredentials.routeBase = \"/(merchants/:merchantId/)credentials\";\nexports.Credentials = Credentials;\n"]}