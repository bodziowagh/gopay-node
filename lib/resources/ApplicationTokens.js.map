{"version":3,"sources":["ApplicationTokens.js"],"names":["CRUDResource_1","require","application_token_1","ApplicationTokens","list","storeId","callback","data","merchantId","token","params","_listRoute","create","_createRoute","update","id","_updateRoute","validationSchema","applicationTokenUpdateSchema","delete","_deleteRoute","CRUDResource","routeBase","exports"],"mappings":"AAAA;;;;;;;;AACA,IAAMA,iBAAiBC,QAAQ,gBAAR,CAAvB;AACA,IAAMC,sBAAsBD,QAAQ,yCAAR,CAA5B;;IACME,iB;;;;;;;;;gCACFC,I,iBAAKC,O,EAASC,Q,EAAUC,I,EAAMC,U,EAAYC,K,EAAO;AAC7C,YAAMC,SAAS,EAAEL,gBAAF,EAAWG,sBAAX,EAAf;AACA,eAAO,KAAKG,UAAL,CAAgBD,MAAhB,EAAwBH,IAAxB,EAA8BD,QAA9B,EAAwC,EAAEG,YAAF,EAAxC,CAAP;AACH,K;;gCACDG,M,mBAAOP,O,EAASC,Q,EAAUE,U,EAAYC,K,EAAO;AACzC,YAAMC,SAAS,EAAEL,gBAAF,EAAWG,sBAAX,EAAf;AACA,eAAO,KAAKK,YAAL,CAAkBH,MAAlB,EAA0B,IAA1B,EAAgCJ,QAAhC,EAA0C,EAAEG,YAAF,EAA1C,CAAP;AACH,K;;gCACDK,M,mBAAOT,O,EAASU,E,EAAIR,I,EAAMD,Q,EAAUE,U,EAAYC,K,EAAO;AACnD,YAAMC,SAAS,EAAEK,MAAF,EAAMV,gBAAN,EAAeG,sBAAf,EAAf;AACA,eAAO,KAAKQ,YAAL,CAAkBN,MAAlB,EAA0BH,IAA1B,EAAgCD,QAAhC,EAA0C,EAAEG,YAAF,EAASQ,kBAAkBf,oBAAoBgB,4BAA/C,EAA1C,CAAP;AACH,K;;gCACDC,M,oBAAOd,O,EAASU,E,EAAIT,Q,EAAUE,U,EAAYC,K,EAAO;AAC7C,YAAMC,SAAS,EAAEK,MAAF,EAAMV,gBAAN,EAAeG,sBAAf,EAAf;AACA,eAAO,KAAKY,YAAL,CAAkBV,MAAlB,EAA0B,IAA1B,EAAgCJ,QAAhC,EAA0C,EAAEG,YAAF,EAA1C,CAAP;AACH,K;;;EAhB2BT,eAAeqB,Y;;AAkB/ClB,kBAAkBmB,SAAlB,GAA8B,qDAA9B;AACAC,QAAQpB,iBAAR,GAA4BA,iBAA5B","file":"ApplicationTokens.js","sourcesContent":["\"use strict\";\nconst CRUDResource_1 = require(\"./CRUDResource\");\nconst application_token_1 = require(\"../validation/schemas/application-token\");\nclass ApplicationTokens extends CRUDResource_1.CRUDResource {\n    list(storeId, callback, data, merchantId, token) {\n        const params = { storeId, merchantId };\n        return this._listRoute(params, data, callback, { token });\n    }\n    create(storeId, callback, merchantId, token) {\n        const params = { storeId, merchantId };\n        return this._createRoute(params, null, callback, { token });\n    }\n    update(storeId, id, data, callback, merchantId, token) {\n        const params = { id, storeId, merchantId };\n        return this._updateRoute(params, data, callback, { token, validationSchema: application_token_1.applicationTokenUpdateSchema });\n    }\n    delete(storeId, id, callback, merchantId, token) {\n        const params = { id, storeId, merchantId };\n        return this._deleteRoute(params, null, callback, { token });\n    }\n}\nApplicationTokens.routeBase = \"/(merchants/:merchantId/)stores/:storeId/app_tokens\";\nexports.ApplicationTokens = ApplicationTokens;\n"]}