{"version":3,"sources":["Subscriptions.js"],"names":["CRUDResource_1","require","Subscriptions","list","data","callback","storeId","defineRoute","create","requiredParams","get","id","_getRoute","delete","_deleteRoute","charges","routeBase","CRUDResource","exports"],"mappings":"AAAA;;;;;;;;;;;;;;;;AACA,IAAMA,iBAAiBC,QAAQ,gBAAR,CAAvB;;IACMC,a;;;;;;;;4BACFC,I,iBAAKC,I,EAAMC,Q,EAAUC,O,EAAS;AAC1B,eAAO,KAAKC,WAAL,CAAiB,KAAjB,EAAwB,kCAAxB,EAA4DH,IAA5D,EAAkEC,QAAlE,EAA4E,CAAC,SAAD,CAA5E,EAAyFC,OAAzF,CAAP;AACH,K;;4BACDE,M,mBAAOJ,I,EAAMC,Q,EAAU;AACnB,eAAO,KAAKE,WAAL,CAAiB,MAAjB,EAAyB,gBAAzB,EAA2CL,cAAcO,cAAzD,EAAyEL,IAAzE,EAA+EC,QAA/E,CAAP;AACH,K;;4BACDK,G,gBAAIJ,O,EAASK,E,EAAIP,I,EAAMC,Q,EAAU;AAC7B,eAAO,KAAKO,SAAL,GAAiBR,IAAjB,EAAuBC,QAAvB,EAAiC,CAAC,SAAD,EAAY,IAAZ,CAAjC,EAAoDC,OAApD,EAA6DK,EAA7D,CAAP;AACH,K;;4BACDE,M,oBAAOP,O,EAASK,E,EAAIP,I,EAAMC,Q,EAAU;AAChC,eAAO,KAAKS,YAAL,GAAoBV,IAApB,EAA0BC,QAA1B,EAAoC,CAAC,SAAD,EAAY,IAAZ,CAApC,EAAuDC,OAAvD,EAAgEK,EAAhE,CAAP;AACH,K;;4BACDI,O,oBAAQT,O,EAASK,E,EAAIP,I,EAAMC,Q,EAAU;AACjC,eAAO,KAAKE,WAAL,CAAiB,KAAjB,EAA2BL,cAAcc,SAAzC,mBAAkEZ,IAAlE,EAAwEC,QAAxE,EAAkF,CAAC,SAAD,EAAY,IAAZ,CAAlF,EAAqGC,OAArG,EAA8GK,EAA9G,CAAP;AACH,K;;;EAfuBX,eAAeiB,Y;;AAiB3Cf,cAAcO,cAAd,GAA+B,CAAC,OAAD,EAAU,QAAV,EAAoB,UAApB,EAAgC,QAAhC,CAA/B;AACAP,cAAcc,SAAd,GAA0B,gCAA1B;AACAE,QAAQhB,aAAR,GAAwBA,aAAxB","file":"Subscriptions.js","sourcesContent":["\"use strict\";\nconst CRUDResource_1 = require(\"./CRUDResource\");\nclass Subscriptions extends CRUDResource_1.CRUDResource {\n    list(data, callback, storeId) {\n        return this.defineRoute(\"GET\", \"(/stores/:storeId)/subscriptions\")(data, callback, [\"storeId\"], storeId);\n    }\n    create(data, callback) {\n        return this.defineRoute(\"POST\", \"/subscriptions\", Subscriptions.requiredParams)(data, callback);\n    }\n    get(storeId, id, data, callback) {\n        return this._getRoute()(data, callback, [\"storeId\", \"id\"], storeId, id);\n    }\n    delete(storeId, id, data, callback) {\n        return this._deleteRoute()(data, callback, [\"storeId\", \"id\"], storeId, id);\n    }\n    charges(storeId, id, data, callback) {\n        return this.defineRoute(\"GET\", `${Subscriptions.routeBase}/:id/charges`)(data, callback, [\"storeId\", \"id\"], storeId, id);\n    }\n}\nSubscriptions.requiredParams = [\"token\", \"amount\", \"currency\", \"period\"];\nSubscriptions.routeBase = \"/stores/:storeId/subscriptions\";\nexports.Subscriptions = Subscriptions;\n"]}