{"version":3,"sources":["credentials.js"],"names":["credentialsCreateSchema","gateway","Object","assign","currencies","credentials","getCredendials","exports","credentialsUpdateSchema","required","prefix","credentialsPayvision","credentialsWorldpay","credentialsWirecard","credentialsAlliedWallet","requiredRule"],"mappings":"AAAA;;AACA,SAASA,uBAAT,CAAiCC,OAAjC,EAA0C;AACtC,WAAOC,OAAOC,MAAP,CAAc;AACjBF,iBAAS,UADQ;AAEjBG,oBAAY,gBAFK;AAGjBC,qBAAa;AAHI,KAAd,EAIJC,eAAeL,OAAf,EAAwB,IAAxB,CAJI,CAAP;AAKH;AACDM,QAAQP,uBAAR,GAAkCA,uBAAlC;AACA,SAASQ,uBAAT,CAAiCP,OAAjC,EAA0C;AACtC,WAAOC,OAAOC,MAAP,CAAc;AACjBF,iBAAS,QADQ;AAEjBG,oBAAY,OAFK;AAGjBC,qBAAa;AAHI,KAAd,EAIJC,eAAeL,OAAf,EAAwB,KAAxB,CAJI,CAAP;AAKH;AACDM,QAAQC,uBAAR,GAAkCA,uBAAlC;AACA,SAASF,cAAT,CAAwBL,OAAxB,EAAiCQ,QAAjC,EAA2C;AACvC,QAAMC,SAAS,cAAf;AACA,YAAQT,OAAR;AACI,aAAK,WAAL;AACI,mBAAOU,qBAAqBD,MAArB,EAA6BD,QAA7B,CAAP;AACJ,aAAK,WAAL;AACI,mBAAOG,oBAAoBF,MAApB,EAA4BD,QAA5B,CAAP;AACJ,aAAK,UAAL;AACI,mBAAOI,oBAAoBH,MAApB,EAA4BD,QAA5B,CAAP;AACJ,aAAK,eAAL;AACI,mBAAOK,wBAAwBJ,MAAxB,EAAgCD,QAAhC,CAAP;AARR;AAUH;AACD,SAASE,oBAAT,GAA6D;AAAA;;AAAA,QAA/BD,MAA+B,yDAAtB,EAAsB;AAAA,QAAlBD,QAAkB,yDAAP,KAAO;;AACzD,QAAMM,eAAeN,WAAW,WAAX,GAAyB,EAA9C;AACA,2BACQC,MADR,mBACgCK,YADhC,kBAEQL,MAFR,qBAEkCK,YAFlC;AAIH;AACDR,QAAQI,oBAAR,GAA+BA,oBAA/B;AACA,SAASC,mBAAT,GAA4D;AAAA;;AAAA,QAA/BF,MAA+B,yDAAtB,EAAsB;AAAA,QAAlBD,QAAkB,yDAAP,KAAO;;AACxD,QAAMM,eAAeN,WAAW,WAAX,GAAyB,EAA9C;AACA,6BACQC,MADR,mBACgCK,YADhC,mBAEQL,MAFR,iBAE8BK,YAF9B;AAIH;AACDR,QAAQK,mBAAR,GAA8BA,mBAA9B;AACA,SAASC,mBAAT,GAA4D;AAAA;;AAAA,QAA/BH,MAA+B,yDAAtB,EAAsB;AAAA,QAAlBD,QAAkB,yDAAP,KAAO;;AACxD,QAAMM,eAAeN,WAAW,WAAX,GAAyB,EAA9C;AACA,6BACQC,MADR,qBACkCK,YADlC,mBAEQL,MAFR,iBAE8BK,YAF9B,mBAGQL,MAHR,iBAG8BK,YAH9B,mBAIQL,MAJR,mBAIgCK,YAJhC;AAMH;AACDR,QAAQM,mBAAR,GAA8BA,mBAA9B;AACA,SAASC,uBAAT,GAAgE;AAAA;;AAAA,QAA/BJ,MAA+B,yDAAtB,EAAsB;AAAA,QAAlBD,QAAkB,yDAAP,KAAO;;AAC5D,QAAMM,eAAeN,WAAW,WAAX,GAAyB,EAA9C;AACA,6BACQC,MADR,mBACgCK,YADhC,iBAEQL,MAFR,eAE4BK,YAF5B;AAIH;AACDR,QAAQO,uBAAR,GAAkCA,uBAAlC","file":"credentials.js","sourcesContent":["\"use strict\";\nfunction credentialsCreateSchema(gateway) {\n    return Object.assign({\n        gateway: \"required\",\n        currencies: \"required|array\",\n        credentials: \"object\"\n    }, getCredendials(gateway, true));\n}\nexports.credentialsCreateSchema = credentialsCreateSchema;\nfunction credentialsUpdateSchema(gateway) {\n    return Object.assign({\n        gateway: \"string\",\n        currencies: \"array\",\n        credentials: \"object\"\n    }, getCredendials(gateway, false));\n}\nexports.credentialsUpdateSchema = credentialsUpdateSchema;\nfunction getCredendials(gateway, required) {\n    const prefix = \"credentials.\";\n    switch (gateway) {\n        case \"payvision\":\n            return credentialsPayvision(prefix, required);\n        case \"world_pay\":\n            return credentialsWorldpay(prefix, required);\n        case \"wirecard\":\n            return credentialsWirecard(prefix, required);\n        case \"allied_wallet\":\n            return credentialsAlliedWallet(prefix, required);\n    }\n}\nfunction credentialsPayvision(prefix = \"\", required = false) {\n    const requiredRule = required ? \"required|\" : \"\";\n    return {\n        [`${prefix}merchantId`]: `${requiredRule}string`,\n        [`${prefix}merchantGuid`]: `${requiredRule}uuid`\n    };\n}\nexports.credentialsPayvision = credentialsPayvision;\nfunction credentialsWorldpay(prefix = \"\", required = false) {\n    const requiredRule = required ? \"required|\" : \"\";\n    return {\n        [`${prefix}merchantId`]: `${requiredRule}string`,\n        [`${prefix}password`]: `${requiredRule}string`\n    };\n}\nexports.credentialsWorldpay = credentialsWorldpay;\nfunction credentialsWirecard(prefix = \"\", required = false) {\n    const requiredRule = required ? \"required|\" : \"\";\n    return {\n        [`${prefix}businessCase`]: `${requiredRule}string`,\n        [`${prefix}username`]: `${requiredRule}string`,\n        [`${prefix}password`]: `${requiredRule}string`,\n        [`${prefix}cardBrands`]: `${requiredRule}array`\n    };\n}\nexports.credentialsWirecard = credentialsWirecard;\nfunction credentialsAlliedWallet(prefix = \"\", required = false) {\n    const requiredRule = required ? \"required|\" : \"\";\n    return {\n        [`${prefix}merchantId`]: `${requiredRule}uuid`,\n        [`${prefix}siteId`]: `${requiredRule}uuid`\n    };\n}\nexports.credentialsAlliedWallet = credentialsAlliedWallet;\n"]}