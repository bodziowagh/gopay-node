{"version":3,"sources":["merchant.js"],"names":["configuration_1","require","contact_info_1","exports","merchantCreateSchema","Object","assign","name","email","password","roles","getConfigurationSchema","merchantUpdateSchema","merchantChangePasswordSchema","isAdmin","oldPassword","newPassword","confirmPassword","merchantForgotPasswordSchema","merchantResetPasswordSchema","merchantCreateVerificationSchema","homepageUrl","companyDescription","businessType","systemManagerName","systemManagerNumber","systemManagerEmail","getContactInfoSchema","merchantUpdateVerificationSchema","merchantCreateVerifySchema","percentFee","merchantTransactionHistory","from","to","merchantBanSchema","reason"],"mappings":"AAAA;;AACA,IAAMA,kBAAkBC,QAAQ,iBAAR,CAAxB;AACA,IAAMC,iBAAiBD,QAAQ,gBAAR,CAAvB;AACAE,QAAQC,oBAAR,GAA+BC,OAAOC,MAAP,CAAc;AACzCC,UAAM,UADmC;AAEzCC,WAAO,gBAFkC;AAGzCC,cAAU,uBAH+B;AAIzCC,WAAO;AAJkC,CAAd,EAK5BV,gBAAgBW,sBAAhB,CAAuC,gBAAvC,CAL4B,CAA/B;AAMAR,QAAQS,oBAAR,GAA+BP,OAAOC,MAAP,CAAc;AACzCC,UAAM,QADmC;AAEzCC,WAAO,OAFkC;AAGzCE,WAAO;AAHkC,CAAd,EAI5BV,gBAAgBW,sBAAhB,CAAuC,gBAAvC,CAJ4B,CAA/B;AAKA,SAASE,4BAAT,CAAsCC,OAAtC,EAA+C;AAC3C,WAAO;AACHC,2BAAgB,CAACD,OAAD,GAAW,WAAX,GAAyB,EAAzC,CADG;AAEHE,qBAAa,UAFV;AAGHC,yBAAiB;AAHd,KAAP;AAKH;AACDd,QAAQU,4BAAR,GAAuCA,4BAAvC;AACAV,QAAQe,4BAAR,GAAuC;AACnCV,WAAO;AAD4B,CAAvC;AAGAL,QAAQgB,2BAAR,GAAsC;AAClCH,iBAAa,UADqB;AAElCC,qBAAiB;AAFiB,CAAtC;AAIAd,QAAQiB,gCAAR,GAA2Cf,OAAOC,MAAP,CAAc;AACrDe,iBAAa,cADwC;AAErDC,wBAAoB,UAFiC;AAGrDC,kBAAc,UAHuC;AAIrDC,uBAAmB,UAJkC;AAKrDC,yBAAqB,QALgC;AAMrDC,wBAAoB;AANiC,CAAd,EAOxCxB,eAAeyB,oBAAf,CAAoC,qBAApC,EAA2D,IAA3D,CAPwC,CAA3C;AAQAxB,QAAQyB,gCAAR,GAA2CvB,OAAOC,MAAP,CAAc;AACrDe,iBAAa,KADwC;AAErDC,wBAAoB,QAFiC;AAGrDC,kBAAc,QAHuC;AAIrDC,uBAAmB,QAJkC;AAKrDC,yBAAqB,QALgC;AAMrDC,wBAAoB;AANiC,CAAd,EAOxCxB,eAAeyB,oBAAf,CAAoC,qBAApC,CAPwC,CAA3C;AAQAxB,QAAQ0B,0BAAR,GAAqC;AACjCC,gBAAY;AADqB,CAArC;AAGA3B,QAAQ4B,0BAAR,GAAqC;AACjCC,UAAM,QAD2B;AAEjCC,QAAI;AAF6B,CAArC;AAIA9B,QAAQ+B,iBAAR,GAA4B;AACxBC,YAAQ;AADgB,CAA5B","file":"merchant.js","sourcesContent":["\"use strict\";\nconst configuration_1 = require(\"./configuration\");\nconst contact_info_1 = require(\"./contact-info\");\nexports.merchantCreateSchema = Object.assign({\n    name: \"required\",\n    email: \"required|email\",\n    password: \"required|min:8|max:32\",\n    roles: \"required|array\"\n}, configuration_1.getConfigurationSchema(\"configuration.\"));\nexports.merchantUpdateSchema = Object.assign({\n    name: \"string\",\n    email: \"email\",\n    roles: \"array\"\n}, configuration_1.getConfigurationSchema(\"configuration.\"));\nfunction merchantChangePasswordSchema(isAdmin) {\n    return {\n        oldPassword: `${!isAdmin ? \"required|\" : \"\"}`,\n        newPassword: \"required\",\n        confirmPassword: \"required|same:newPassword\"\n    };\n}\nexports.merchantChangePasswordSchema = merchantChangePasswordSchema;\nexports.merchantForgotPasswordSchema = {\n    email: \"required|email\"\n};\nexports.merchantResetPasswordSchema = {\n    newPassword: \"required\",\n    confirmPassword: \"required|same:newPassword\"\n};\nexports.merchantCreateVerificationSchema = Object.assign({\n    homepageUrl: \"required|url\",\n    companyDescription: \"required\",\n    businessType: \"required\",\n    systemManagerName: \"required\",\n    systemManagerNumber: \"string\",\n    systemManagerEmail: \"email\"\n}, contact_info_1.getContactInfoSchema(\"companyContactInfo.\", true));\nexports.merchantUpdateVerificationSchema = Object.assign({\n    homepageUrl: \"url\",\n    companyDescription: \"string\",\n    businessType: \"string\",\n    systemManagerName: \"string\",\n    systemManagerNumber: \"string\",\n    systemManagerEmail: \"email\"\n}, contact_info_1.getContactInfoSchema(\"companyContactInfo.\"));\nexports.merchantCreateVerifySchema = {\n    percentFee: \"required|numeric|min:0|max:1\"\n};\nexports.merchantTransactionHistory = {\n    from: \"string\",\n    to: \"string\"\n};\nexports.merchantBanSchema = {\n    reason: \"required\"\n};\n"]}