{"version":3,"sources":["RestAPI.js"],"names":["require","SDKError_1","utils_1","exports","DEFAULT_ENDPOINT","DEFAULT_ENV_APP_ID","DEFAULT_ENV_SECRET","RestAPI","options","endpoint","appId","process","env","secret","camel","requestParams","params","underscore","setToken","token","getToken","send","callback","_token","headers","Headers","append","Boolean","body","FormData","Promise","resolve","reject","request","Request","url","method","mode","fetch","then","response","all","status","text","JSON","parse","err","errorFromResponse","result","camelCase","catch","error"],"mappings":"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","file":"RestAPI.js","sourcesContent":["\"use strict\";\nrequire(\"isomorphic-fetch\");\nconst SDKError_1 = require(\"../errors/SDKError\");\nconst utils_1 = require(\"../utils\");\nexports.DEFAULT_ENDPOINT = \"http://localhost:9000\";\nexports.DEFAULT_ENV_APP_ID = \"GPAY_APP_ID\";\nexports.DEFAULT_ENV_SECRET = \"GPAY_SECRET\";\nclass RestAPI {\n    constructor(options) {\n        this.endpoint = options.endpoint || exports.DEFAULT_ENDPOINT;\n        this.appId = options.appId || process.env[exports.DEFAULT_ENV_APP_ID];\n        this.secret = options.secret || process.env[exports.DEFAULT_ENV_SECRET];\n        this.camel = options.camel || false;\n    }\n    static requestParams(params) {\n        return utils_1.underscore(params);\n    }\n    setToken(token) {\n        this.token = token;\n    }\n    getToken() {\n        return this.token;\n    }\n    send(params, callback, options = {}) {\n        const _token = (options || {}).token || this.token;\n        const headers = new Headers();\n        if (_token) {\n            headers.append(\"Authorization\", `Token ${_token}`);\n        }\n        else if (Boolean(this.appId)) {\n            headers.append(\"Authorization\", `ApplicationToken ${this.appId}|${this.secret || \"\"}`);\n        }\n        if (!(params.body instanceof FormData)) {\n            headers.append(\"Content-Type\", \"application/json\");\n        }\n        else if (params.body) {\n            headers.append(\"Accept\", \"application/json\");\n        }\n        return new Promise((resolve, reject) => {\n            const request = new Request(`${this.endpoint}${params.url}`, {\n                body: params.body instanceof FormData ? utils_1.underscore(params.body) : params.body,\n                headers,\n                method: params.method,\n                mode: \"cors\"\n            });\n            fetch(request)\n                .then((response) => Promise.all([Promise.resolve(response.status), response.text()]))\n                .then(([status, text]) => {\n                return Promise.all([\n                    Promise.resolve(status),\n                    Promise.resolve(text ? JSON.parse(text) : {})\n                ]);\n            })\n                .then(([status, body]) => {\n                const err = SDKError_1.errorFromResponse(status, body);\n                if (err !== null) {\n                    throw err;\n                }\n                const result = this.camel ? utils_1.camelCase(body) : body;\n                callback(null, result);\n                resolve(result);\n            })\n                .catch((error) => {\n                callback(error, null);\n                reject(error);\n            });\n        });\n    }\n}\nexports.RestAPI = RestAPI;\n"]}