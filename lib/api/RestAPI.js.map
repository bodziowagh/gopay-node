{"version":3,"sources":["RestAPI.js"],"names":["require","camelcase","decamelize","constants_1","object_1","RestAPI","options","endpoint","DEFAULT_ENDPOINT","appId","process","env","ENV_KEY_APP_ID","secret","ENV_KEY_SECRET","camel","requestParams","params","transformKeys","setToken","token","getToken","send","callback","_token","headers","Headers","append","Boolean","body","FormData","Promise","resolve","reject","request","Request","url","method","mode","fetch","then","response","all","status","text","JSON","parse","err","result","catch","error","exports"],"mappings":"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","file":"RestAPI.js","sourcesContent":["\"use strict\";\nrequire(\"isomorphic-fetch\");\nconst camelcase = require(\"camelcase\");\nconst decamelize = require(\"decamelize\");\nconst constants_1 = require(\"../constants\");\nconst object_1 = require(\"../utils/object\");\nclass RestAPI {\n    constructor(options = {}) {\n        this.endpoint = options.endpoint || constants_1.DEFAULT_ENDPOINT;\n        this.appId = options.appId || process.env[constants_1.ENV_KEY_APP_ID];\n        this.secret = options.secret || process.env[constants_1.ENV_KEY_SECRET];\n        this.camel = options.camel || false;\n    }\n    static requestParams(params) {\n        return object_1.transformKeys(params, decamelize);\n    }\n    setToken(token) {\n        this.token = token;\n    }\n    getToken() {\n        return this.token;\n    }\n    send(params, callback, options = {}) {\n        const _token = (options || {}).token || this.token;\n        const headers = new Headers();\n        if (_token) {\n            headers.append(\"Authorization\", `Token ${_token}`);\n        }\n        else if (Boolean(this.appId)) {\n            headers.append(\"Authorization\", `ApplicationToken ${this.appId}|${this.secret || \"\"}`);\n        }\n        if (!(params.body instanceof FormData)) {\n            headers.append(\"Content-Type\", \"application/json\");\n        }\n        else if (params.body) {\n            headers.append(\"Accept\", \"application/json\");\n        }\n        return new Promise((resolve, reject) => {\n            const request = new Request(`${this.endpoint}${params.url}`, {\n                body: params.body,\n                headers,\n                method: params.method,\n                mode: \"cors\"\n            });\n            fetch(request)\n                .then((response) => Promise.all([Promise.resolve(response.status), response.text()]))\n                .then(([status, text]) => {\n                return Promise.all([\n                    Promise.resolve(status),\n                    Promise.resolve(text ? JSON.parse(text) : {})\n                ]);\n            })\n                .then(([status, body]) => {\n                //const err: any = errorFromResponse(status, body)\n                const err = null;\n                if (err !== null) {\n                    throw err;\n                }\n                const result = this.camel ? object_1.transformKeys(body, camelcase) : body;\n                callback(null, result);\n                resolve(result);\n            })\n                .catch((error) => {\n                callback(error, null);\n                reject(error);\n            });\n        });\n    }\n}\nexports.RestAPI = RestAPI;\n"]}